
driverdev_training.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005a0  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000728  08000730  00001730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000728  08000728  00001730  2**0
                  CONTENTS
  4 .ARM          00000000  08000728  08000728  00001730  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000728  08000730  00001730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000728  08000728  00001728  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800072c  0800072c  0000172c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001730  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000fe1  00000000  00000000  0000175a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000047a  00000000  00000000  0000273b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000d8  00000000  00000000  00002bb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000091  00000000  00000000  00002c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000259b  00000000  00000000  00002d21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000015d6  00000000  00000000  000052bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000b04a  00000000  00000000  00006892  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000118dc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000025c  00000000  00000000  00011920  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  00011b7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000710 	.word	0x08000710

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000710 	.word	0x08000710

080001c8 <EXTI0_IRQHandler>:
static void GPIO_ButtonInterruptConfig();
static void GPIO_LedConfig();
void EXTI0_IRQHandler();
void SPI_config();

void EXTI0_IRQHandler(){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0

	if(EXTI->PR & 0x1){
 80001cc:	4b09      	ldr	r3, [pc, #36]	@ (80001f4 <EXTI0_IRQHandler+0x2c>)
 80001ce:	695b      	ldr	r3, [r3, #20]
 80001d0:	f003 0301 	and.w	r3, r3, #1
 80001d4:	2b00      	cmp	r3, #0
 80001d6:	d00b      	beq.n	80001f0 <EXTI0_IRQHandler+0x28>

		EXTI->PR |= (0x1U <<0U);
 80001d8:	4b06      	ldr	r3, [pc, #24]	@ (80001f4 <EXTI0_IRQHandler+0x2c>)
 80001da:	695b      	ldr	r3, [r3, #20]
 80001dc:	4a05      	ldr	r2, [pc, #20]	@ (80001f4 <EXTI0_IRQHandler+0x2c>)
 80001de:	f043 0301 	orr.w	r3, r3, #1
 80001e2:	6153      	str	r3, [r2, #20]

		GPIO_WritePin(GPIOD, GPIO_PIN_ALL,GPIO_Pin_Set );
 80001e4:	2201      	movs	r2, #1
 80001e6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80001ea:	4803      	ldr	r0, [pc, #12]	@ (80001f8 <EXTI0_IRQHandler+0x30>)
 80001ec:	f000 fa4c 	bl	8000688 <GPIO_WritePin>

	}


}
 80001f0:	bf00      	nop
 80001f2:	bd80      	pop	{r7, pc}
 80001f4:	40013c00 	.word	0x40013c00
 80001f8:	40020c00 	.word	0x40020c00

080001fc <main>:

int main(void)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
	GPIO_LedConfig();
 8000200:	f000 f804 	bl	800020c <GPIO_LedConfig>
	GPIO_ButtonInterruptConfig();
 8000204:	f000 f854 	bl	80002b0 <GPIO_ButtonInterruptConfig>




	for(;;);
 8000208:	bf00      	nop
 800020a:	e7fd      	b.n	8000208 <main+0xc>

0800020c <GPIO_LedConfig>:

}

static void GPIO_LedConfig(){
 800020c:	b580      	push	{r7, lr}
 800020e:	b08a      	sub	sp, #40	@ 0x28
 8000210:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef_t GPIO_InitStruct = {0};
 8000212:	1d3b      	adds	r3, r7, #4
 8000214:	2200      	movs	r2, #0
 8000216:	601a      	str	r2, [r3, #0]
 8000218:	605a      	str	r2, [r3, #4]
 800021a:	609a      	str	r2, [r3, #8]
 800021c:	60da      	str	r2, [r3, #12]
 800021e:	611a      	str	r2, [r3, #16]
 8000220:	615a      	str	r2, [r3, #20]
 8000222:	619a      	str	r2, [r3, #24]

		RCC_GPIOD_CLK_ENABLE();
 8000224:	2300      	movs	r3, #0
 8000226:	627b      	str	r3, [r7, #36]	@ 0x24
 8000228:	4b1e      	ldr	r3, [pc, #120]	@ (80002a4 <GPIO_LedConfig+0x98>)
 800022a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800022c:	4a1d      	ldr	r2, [pc, #116]	@ (80002a4 <GPIO_LedConfig+0x98>)
 800022e:	f043 0308 	orr.w	r3, r3, #8
 8000232:	6313      	str	r3, [r2, #48]	@ 0x30
 8000234:	4b1b      	ldr	r3, [pc, #108]	@ (80002a4 <GPIO_LedConfig+0x98>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000238:	f003 0308 	and.w	r3, r3, #8
 800023c:	627b      	str	r3, [r7, #36]	@ 0x24
		RCC_GPIOA_CLK_ENABLE();
 800023e:	2300      	movs	r3, #0
 8000240:	623b      	str	r3, [r7, #32]
 8000242:	4b18      	ldr	r3, [pc, #96]	@ (80002a4 <GPIO_LedConfig+0x98>)
 8000244:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000246:	4a17      	ldr	r2, [pc, #92]	@ (80002a4 <GPIO_LedConfig+0x98>)
 8000248:	f043 0301 	orr.w	r3, r3, #1
 800024c:	6313      	str	r3, [r2, #48]	@ 0x30
 800024e:	4b15      	ldr	r3, [pc, #84]	@ (80002a4 <GPIO_LedConfig+0x98>)
 8000250:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000252:	f003 0301 	and.w	r3, r3, #1
 8000256:	623b      	str	r3, [r7, #32]


		GPIO_InitStruct.pinNumber = GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 8000258:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
 800025c:	607b      	str	r3, [r7, #4]
		GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
 800025e:	2301      	movs	r3, #1
 8000260:	60bb      	str	r3, [r7, #8]
		GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 8000262:	2300      	movs	r3, #0
 8000264:	613b      	str	r3, [r7, #16]
		GPIO_InitStruct.Otype = GPIO_OTYPE_PP;
 8000266:	2300      	movs	r3, #0
 8000268:	60fb      	str	r3, [r7, #12]
		GPIO_InitStruct.PuPd = GPIO_PUPD_NOPULL;
 800026a:	2300      	movs	r3, #0
 800026c:	617b      	str	r3, [r7, #20]

		GPIO_Init(GPIOD, &GPIO_InitStruct);
 800026e:	1d3b      	adds	r3, r7, #4
 8000270:	4619      	mov	r1, r3
 8000272:	480d      	ldr	r0, [pc, #52]	@ (80002a8 <GPIO_LedConfig+0x9c>)
 8000274:	f000 f957 	bl	8000526 <GPIO_Init>

		memset(&GPIO_InitStruct,0, sizeof(GPIO_InitStruct));
 8000278:	1d3b      	adds	r3, r7, #4
 800027a:	221c      	movs	r2, #28
 800027c:	2100      	movs	r1, #0
 800027e:	4618      	mov	r0, r3
 8000280:	f000 fa1a 	bl	80006b8 <memset>

		GPIO_InitStruct.pinNumber = GPIO_PIN_0;
 8000284:	2301      	movs	r3, #1
 8000286:	607b      	str	r3, [r7, #4]
		GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000288:	2300      	movs	r3, #0
 800028a:	60bb      	str	r3, [r7, #8]
		GPIO_InitStruct.PuPd = GPIO_PUPD_PULLDOWN;
 800028c:	2302      	movs	r3, #2
 800028e:	617b      	str	r3, [r7, #20]

		GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000290:	1d3b      	adds	r3, r7, #4
 8000292:	4619      	mov	r1, r3
 8000294:	4805      	ldr	r0, [pc, #20]	@ (80002ac <GPIO_LedConfig+0xa0>)
 8000296:	f000 f946 	bl	8000526 <GPIO_Init>
}
 800029a:	bf00      	nop
 800029c:	3728      	adds	r7, #40	@ 0x28
 800029e:	46bd      	mov	sp, r7
 80002a0:	bd80      	pop	{r7, pc}
 80002a2:	bf00      	nop
 80002a4:	40023800 	.word	0x40023800
 80002a8:	40020c00 	.word	0x40020c00
 80002ac:	40020000 	.word	0x40020000

080002b0 <GPIO_ButtonInterruptConfig>:



static void GPIO_ButtonInterruptConfig(){
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0

		RCC_SYSCFG_CLK_ENABLE();
 80002b6:	2300      	movs	r3, #0
 80002b8:	607b      	str	r3, [r7, #4]
 80002ba:	4b12      	ldr	r3, [pc, #72]	@ (8000304 <GPIO_ButtonInterruptConfig+0x54>)
 80002bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80002be:	4a11      	ldr	r2, [pc, #68]	@ (8000304 <GPIO_ButtonInterruptConfig+0x54>)
 80002c0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80002c4:	6453      	str	r3, [r2, #68]	@ 0x44
 80002c6:	4b0f      	ldr	r3, [pc, #60]	@ (8000304 <GPIO_ButtonInterruptConfig+0x54>)
 80002c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80002ca:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80002ce:	607b      	str	r3, [r7, #4]

		EXTI_InitTypeDef_t EXTI_InitStruct= {0};
 80002d0:	2300      	movs	r3, #0
 80002d2:	603b      	str	r3, [r7, #0]

		EXTI_LineConfig(EXTI_PortSource_GPIOA, EXTI_LineSource_0);
 80002d4:	2100      	movs	r1, #0
 80002d6:	2000      	movs	r0, #0
 80002d8:	f000 f8be 	bl	8000458 <EXTI_LineConfig>

		EXTI_InitStruct.EXTI_LineCmd = ENABLE;
 80002dc:	2301      	movs	r3, #1
 80002de:	70fb      	strb	r3, [r7, #3]
		EXTI_InitStruct.EXTI_LineNumber = EXTI_LineSource_0;
 80002e0:	2300      	movs	r3, #0
 80002e2:	703b      	strb	r3, [r7, #0]
		EXTI_InitStruct.EXTI_Mode = EXTI_MODE_Interrupt;
 80002e4:	2300      	movs	r3, #0
 80002e6:	70bb      	strb	r3, [r7, #2]
		EXTI_InitStruct.TriggerSelection =EXTI_RTSR;
 80002e8:	2308      	movs	r3, #8
 80002ea:	707b      	strb	r3, [r7, #1]

		EXTI_Init(&EXTI_InitStruct);
 80002ec:	463b      	mov	r3, r7
 80002ee:	4618      	mov	r0, r3
 80002f0:	f000 f834 	bl	800035c <EXTI_Init>

		NVIC_EnableInterrupt(EXTI0_IRQNumber);
 80002f4:	2006      	movs	r0, #6
 80002f6:	f000 f8e3 	bl	80004c0 <NVIC_EnableInterrupt>

	}
 80002fa:	bf00      	nop
 80002fc:	3708      	adds	r7, #8
 80002fe:	46bd      	mov	sp, r7
 8000300:	bd80      	pop	{r7, pc}
 8000302:	bf00      	nop
 8000304:	40023800 	.word	0x40023800

08000308 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000308:	480d      	ldr	r0, [pc, #52]	@ (8000340 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800030a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800030c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000310:	480c      	ldr	r0, [pc, #48]	@ (8000344 <LoopForever+0x6>)
  ldr r1, =_edata
 8000312:	490d      	ldr	r1, [pc, #52]	@ (8000348 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000314:	4a0d      	ldr	r2, [pc, #52]	@ (800034c <LoopForever+0xe>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000318:	e002      	b.n	8000320 <LoopCopyDataInit>

0800031a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800031a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800031c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031e:	3304      	adds	r3, #4

08000320 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000320:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000322:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000324:	d3f9      	bcc.n	800031a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000326:	4a0a      	ldr	r2, [pc, #40]	@ (8000350 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000328:	4c0a      	ldr	r4, [pc, #40]	@ (8000354 <LoopForever+0x16>)
  movs r3, #0
 800032a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800032c:	e001      	b.n	8000332 <LoopFillZerobss>

0800032e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000330:	3204      	adds	r2, #4

08000332 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000332:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000334:	d3fb      	bcc.n	800032e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000336:	f000 f9c7 	bl	80006c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800033a:	f7ff ff5f 	bl	80001fc <main>

0800033e <LoopForever>:

LoopForever:
  b LoopForever
 800033e:	e7fe      	b.n	800033e <LoopForever>
  ldr   r0, =_estack
 8000340:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000344:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000348:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800034c:	08000730 	.word	0x08000730
  ldr r2, =_sbss
 8000350:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000354:	2000001c 	.word	0x2000001c

08000358 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000358:	e7fe      	b.n	8000358 <ADC_IRQHandler>
	...

0800035c <EXTI_Init>:
 * @retval Void
 *
 */


void EXTI_Init(EXTI_InitTypeDef_t*EXTI_InitStruct){
 800035c:	b480      	push	{r7}
 800035e:	b085      	sub	sp, #20
 8000360:	af00      	add	r7, sp, #0
 8000362:	6078      	str	r0, [r7, #4]

	uint32_t tempValue = 0;
 8000364:	2300      	movs	r3, #0
 8000366:	60fb      	str	r3, [r7, #12]

	tempValue = (uint32_t)EXTI_BASE_ADDR;
 8000368:	4b3a      	ldr	r3, [pc, #232]	@ (8000454 <EXTI_Init+0xf8>)
 800036a:	60fb      	str	r3, [r7, #12]

	EXTI->IMR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 800036c:	4b39      	ldr	r3, [pc, #228]	@ (8000454 <EXTI_Init+0xf8>)
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	781b      	ldrb	r3, [r3, #0]
 8000374:	4619      	mov	r1, r3
 8000376:	2301      	movs	r3, #1
 8000378:	408b      	lsls	r3, r1
 800037a:	43db      	mvns	r3, r3
 800037c:	4935      	ldr	r1, [pc, #212]	@ (8000454 <EXTI_Init+0xf8>)
 800037e:	4013      	ands	r3, r2
 8000380:	600b      	str	r3, [r1, #0]
	EXTI->EMR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 8000382:	4b34      	ldr	r3, [pc, #208]	@ (8000454 <EXTI_Init+0xf8>)
 8000384:	685a      	ldr	r2, [r3, #4]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	781b      	ldrb	r3, [r3, #0]
 800038a:	4619      	mov	r1, r3
 800038c:	2301      	movs	r3, #1
 800038e:	408b      	lsls	r3, r1
 8000390:	43db      	mvns	r3, r3
 8000392:	4930      	ldr	r1, [pc, #192]	@ (8000454 <EXTI_Init+0xf8>)
 8000394:	4013      	ands	r3, r2
 8000396:	604b      	str	r3, [r1, #4]

	if(EXTI_InitStruct->EXTI_LineCmd !=	DISABLE){
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	78db      	ldrb	r3, [r3, #3]
 800039c:	2b00      	cmp	r3, #0
 800039e:	d040      	beq.n	8000422 <EXTI_Init+0xc6>

		tempValue += EXTI_InitStruct->EXTI_Mode;
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	789b      	ldrb	r3, [r3, #2]
 80003a4:	461a      	mov	r2, r3
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	4413      	add	r3, r2
 80003aa:	60fb      	str	r3, [r7, #12]

		*((__IO uint32_t*)tempValue) |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80003ac:	68fb      	ldr	r3, [r7, #12]
 80003ae:	6819      	ldr	r1, [r3, #0]
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	781b      	ldrb	r3, [r3, #0]
 80003b4:	461a      	mov	r2, r3
 80003b6:	2301      	movs	r3, #1
 80003b8:	fa03 f202 	lsl.w	r2, r3, r2
 80003bc:	68fb      	ldr	r3, [r7, #12]
 80003be:	430a      	orrs	r2, r1
 80003c0:	601a      	str	r2, [r3, #0]

		tempValue = (uint32_t)EXTI_BASE_ADDR;
 80003c2:	4b24      	ldr	r3, [pc, #144]	@ (8000454 <EXTI_Init+0xf8>)
 80003c4:	60fb      	str	r3, [r7, #12]

		EXTI->RTSR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80003c6:	4b23      	ldr	r3, [pc, #140]	@ (8000454 <EXTI_Init+0xf8>)
 80003c8:	689a      	ldr	r2, [r3, #8]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	781b      	ldrb	r3, [r3, #0]
 80003ce:	4619      	mov	r1, r3
 80003d0:	2301      	movs	r3, #1
 80003d2:	408b      	lsls	r3, r1
 80003d4:	43db      	mvns	r3, r3
 80003d6:	491f      	ldr	r1, [pc, #124]	@ (8000454 <EXTI_Init+0xf8>)
 80003d8:	4013      	ands	r3, r2
 80003da:	608b      	str	r3, [r1, #8]
		EXTI->FTSR &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80003dc:	4b1d      	ldr	r3, [pc, #116]	@ (8000454 <EXTI_Init+0xf8>)
 80003de:	68da      	ldr	r2, [r3, #12]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	781b      	ldrb	r3, [r3, #0]
 80003e4:	4619      	mov	r1, r3
 80003e6:	2301      	movs	r3, #1
 80003e8:	408b      	lsls	r3, r1
 80003ea:	43db      	mvns	r3, r3
 80003ec:	4919      	ldr	r1, [pc, #100]	@ (8000454 <EXTI_Init+0xf8>)
 80003ee:	4013      	ands	r3, r2
 80003f0:	60cb      	str	r3, [r1, #12]

		if(EXTI_InitStruct->TriggerSelection = EXTI_RFTSR){
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	2210      	movs	r2, #16
 80003f6:	705a      	strb	r2, [r3, #1]

			EXTI->RTSR |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 80003f8:	4b16      	ldr	r3, [pc, #88]	@ (8000454 <EXTI_Init+0xf8>)
 80003fa:	689a      	ldr	r2, [r3, #8]
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	781b      	ldrb	r3, [r3, #0]
 8000400:	4619      	mov	r1, r3
 8000402:	2301      	movs	r3, #1
 8000404:	408b      	lsls	r3, r1
 8000406:	4913      	ldr	r1, [pc, #76]	@ (8000454 <EXTI_Init+0xf8>)
 8000408:	4313      	orrs	r3, r2
 800040a:	608b      	str	r3, [r1, #8]
			EXTI->FTSR |= (0x1U << EXTI_InitStruct->EXTI_LineNumber);
 800040c:	4b11      	ldr	r3, [pc, #68]	@ (8000454 <EXTI_Init+0xf8>)
 800040e:	68da      	ldr	r2, [r3, #12]
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	781b      	ldrb	r3, [r3, #0]
 8000414:	4619      	mov	r1, r3
 8000416:	2301      	movs	r3, #1
 8000418:	408b      	lsls	r3, r1
 800041a:	490e      	ldr	r1, [pc, #56]	@ (8000454 <EXTI_Init+0xf8>)
 800041c:	4313      	orrs	r3, r2
 800041e:	60cb      	str	r3, [r1, #12]
		tempValue += EXTI_InitStruct->EXTI_Mode;
		*((__IO uint32_t*)tempValue) &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);

	}

}
 8000420:	e012      	b.n	8000448 <EXTI_Init+0xec>
		tempValue = (uint32_t)EXTI_BASE_ADDR;
 8000422:	4b0c      	ldr	r3, [pc, #48]	@ (8000454 <EXTI_Init+0xf8>)
 8000424:	60fb      	str	r3, [r7, #12]
		tempValue += EXTI_InitStruct->EXTI_Mode;
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	789b      	ldrb	r3, [r3, #2]
 800042a:	461a      	mov	r2, r3
 800042c:	68fb      	ldr	r3, [r7, #12]
 800042e:	4413      	add	r3, r2
 8000430:	60fb      	str	r3, [r7, #12]
		*((__IO uint32_t*)tempValue) &= ~(0x1U << EXTI_InitStruct->EXTI_LineNumber);
 8000432:	68fb      	ldr	r3, [r7, #12]
 8000434:	6819      	ldr	r1, [r3, #0]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	781b      	ldrb	r3, [r3, #0]
 800043a:	461a      	mov	r2, r3
 800043c:	2301      	movs	r3, #1
 800043e:	4093      	lsls	r3, r2
 8000440:	43da      	mvns	r2, r3
 8000442:	68fb      	ldr	r3, [r7, #12]
 8000444:	400a      	ands	r2, r1
 8000446:	601a      	str	r2, [r3, #0]
}
 8000448:	bf00      	nop
 800044a:	3714      	adds	r7, #20
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr
 8000452:	bf00      	nop
 8000454:	40013c00 	.word	0x40013c00

08000458 <EXTI_LineConfig>:
 *
 * @retval Void
 *
 */

void EXTI_LineConfig(uint8_t PortSource, uint8_t EXTI_LineSource){
 8000458:	b480      	push	{r7}
 800045a:	b085      	sub	sp, #20
 800045c:	af00      	add	r7, sp, #0
 800045e:	4603      	mov	r3, r0
 8000460:	460a      	mov	r2, r1
 8000462:	71fb      	strb	r3, [r7, #7]
 8000464:	4613      	mov	r3, r2
 8000466:	71bb      	strb	r3, [r7, #6]

	uint32_t tempValue = 0;
 8000468:	2300      	movs	r3, #0
 800046a:	60fb      	str	r3, [r7, #12]

	tempValue = SYSCFG->EXTI_CR[EXTI_LineSource >> 2U];
 800046c:	4a13      	ldr	r2, [pc, #76]	@ (80004bc <EXTI_LineConfig+0x64>)
 800046e:	79bb      	ldrb	r3, [r7, #6]
 8000470:	089b      	lsrs	r3, r3, #2
 8000472:	b2db      	uxtb	r3, r3
 8000474:	3302      	adds	r3, #2
 8000476:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800047a:	60fb      	str	r3, [r7, #12]
	tempValue &= ~(0xFU << (EXTI_LineSource & 0x3U) * 4);
 800047c:	79bb      	ldrb	r3, [r7, #6]
 800047e:	f003 0303 	and.w	r3, r3, #3
 8000482:	009b      	lsls	r3, r3, #2
 8000484:	220f      	movs	r2, #15
 8000486:	fa02 f303 	lsl.w	r3, r2, r3
 800048a:	43db      	mvns	r3, r3
 800048c:	68fa      	ldr	r2, [r7, #12]
 800048e:	4013      	ands	r3, r2
 8000490:	60fb      	str	r3, [r7, #12]
	tempValue = (PortSource << (EXTI_LineSource & 0x3U) * 4);
 8000492:	79fa      	ldrb	r2, [r7, #7]
 8000494:	79bb      	ldrb	r3, [r7, #6]
 8000496:	f003 0303 	and.w	r3, r3, #3
 800049a:	009b      	lsls	r3, r3, #2
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	60fb      	str	r3, [r7, #12]
	SYSCFG->EXTI_CR[EXTI_LineSource >> 2U] = tempValue;
 80004a2:	4906      	ldr	r1, [pc, #24]	@ (80004bc <EXTI_LineConfig+0x64>)
 80004a4:	79bb      	ldrb	r3, [r7, #6]
 80004a6:	089b      	lsrs	r3, r3, #2
 80004a8:	b2db      	uxtb	r3, r3
 80004aa:	3302      	adds	r3, #2
 80004ac:	68fa      	ldr	r2, [r7, #12]
 80004ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80004b2:	bf00      	nop
 80004b4:	3714      	adds	r7, #20
 80004b6:	46bd      	mov	sp, r7
 80004b8:	bc80      	pop	{r7}
 80004ba:	4770      	bx	lr
 80004bc:	40013800 	.word	0x40013800

080004c0 <NVIC_EnableInterrupt>:
 *
 */



void NVIC_EnableInterrupt(IRQNumber_TypeDef_t IRQnumber){
 80004c0:	b480      	push	{r7}
 80004c2:	b085      	sub	sp, #20
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	4603      	mov	r3, r0
 80004c8:	71fb      	strb	r3, [r7, #7]

	uint32_t tempValue = 0;
 80004ca:	2300      	movs	r3, #0
 80004cc:	60fb      	str	r3, [r7, #12]

	tempValue = *((IRQnumber >> 5U) + NVIC_ISER0);
 80004ce:	79fb      	ldrb	r3, [r7, #7]
 80004d0:	095b      	lsrs	r3, r3, #5
 80004d2:	b2db      	uxtb	r3, r3
 80004d4:	009b      	lsls	r3, r3, #2
 80004d6:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 80004da:	f503 4361 	add.w	r3, r3, #57600	@ 0xe100
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	60fb      	str	r3, [r7, #12]
	tempValue &= ~(0x1U << (IRQnumber & 0x1FU));
 80004e2:	79fb      	ldrb	r3, [r7, #7]
 80004e4:	f003 031f 	and.w	r3, r3, #31
 80004e8:	2201      	movs	r2, #1
 80004ea:	fa02 f303 	lsl.w	r3, r2, r3
 80004ee:	43db      	mvns	r3, r3
 80004f0:	68fa      	ldr	r2, [r7, #12]
 80004f2:	4013      	ands	r3, r2
 80004f4:	60fb      	str	r3, [r7, #12]
	tempValue |= (0x1U << (IRQnumber & 0x1FU));
 80004f6:	79fb      	ldrb	r3, [r7, #7]
 80004f8:	f003 031f 	and.w	r3, r3, #31
 80004fc:	2201      	movs	r2, #1
 80004fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000502:	68fa      	ldr	r2, [r7, #12]
 8000504:	4313      	orrs	r3, r2
 8000506:	60fb      	str	r3, [r7, #12]
	*((IRQnumber >> 5U) + NVIC_ISER0) = tempValue;
 8000508:	79fb      	ldrb	r3, [r7, #7]
 800050a:	095b      	lsrs	r3, r3, #5
 800050c:	b2db      	uxtb	r3, r3
 800050e:	009b      	lsls	r3, r3, #2
 8000510:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000514:	f503 4361 	add.w	r3, r3, #57600	@ 0xe100
 8000518:	68fa      	ldr	r2, [r7, #12]
 800051a:	601a      	str	r2, [r3, #0]

}
 800051c:	bf00      	nop
 800051e:	3714      	adds	r7, #20
 8000520:	46bd      	mov	sp, r7
 8000522:	bc80      	pop	{r7}
 8000524:	4770      	bx	lr

08000526 <GPIO_Init>:
 *
 * @retval Void
 *
 */

void GPIO_Init(GPIO_TypeDef_t *GPIOx,GPIO_InitTypeDef_t *GPIO_ConfigStruct){
 8000526:	b480      	push	{r7}
 8000528:	b089      	sub	sp, #36	@ 0x24
 800052a:	af00      	add	r7, sp, #0
 800052c:	6078      	str	r0, [r7, #4]
 800052e:	6039      	str	r1, [r7, #0]

	uint32_t pos;
	uint32_t fakepos;
	uint32_t lastpos;

	for(pos =0; pos< 16; pos++){
 8000530:	2300      	movs	r3, #0
 8000532:	61fb      	str	r3, [r7, #28]
 8000534:	e09e      	b.n	8000674 <GPIO_Init+0x14e>

		fakepos = (0x1 << pos);
 8000536:	2201      	movs	r2, #1
 8000538:	69fb      	ldr	r3, [r7, #28]
 800053a:	fa02 f303 	lsl.w	r3, r2, r3
 800053e:	61bb      	str	r3, [r7, #24]
		lastpos = (GPIO_ConfigStruct->pinNumber)& fakepos;
 8000540:	683b      	ldr	r3, [r7, #0]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	69ba      	ldr	r2, [r7, #24]
 8000546:	4013      	ands	r3, r2
 8000548:	617b      	str	r3, [r7, #20]

		if (fakepos == lastpos){
 800054a:	69ba      	ldr	r2, [r7, #24]
 800054c:	697b      	ldr	r3, [r7, #20]
 800054e:	429a      	cmp	r2, r3
 8000550:	d117      	bne.n	8000582 <GPIO_Init+0x5c>

			/* Mode Config  */

			uint32_t tempValue = GPIOx->MODER;
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	613b      	str	r3, [r7, #16]

			tempValue &= ~(0x3U <<(pos*2));
 8000558:	69fb      	ldr	r3, [r7, #28]
 800055a:	005b      	lsls	r3, r3, #1
 800055c:	2203      	movs	r2, #3
 800055e:	fa02 f303 	lsl.w	r3, r2, r3
 8000562:	43db      	mvns	r3, r3
 8000564:	693a      	ldr	r2, [r7, #16]
 8000566:	4013      	ands	r3, r2
 8000568:	613b      	str	r3, [r7, #16]
			tempValue |= (GPIO_ConfigStruct->Mode <<(pos*2));
 800056a:	683b      	ldr	r3, [r7, #0]
 800056c:	685a      	ldr	r2, [r3, #4]
 800056e:	69fb      	ldr	r3, [r7, #28]
 8000570:	005b      	lsls	r3, r3, #1
 8000572:	fa02 f303 	lsl.w	r3, r2, r3
 8000576:	693a      	ldr	r2, [r7, #16]
 8000578:	4313      	orrs	r3, r2
 800057a:	613b      	str	r3, [r7, #16]

			GPIOx->MODER = tempValue;
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	693a      	ldr	r2, [r7, #16]
 8000580:	601a      	str	r2, [r3, #0]
		}

		if(GPIO_ConfigStruct->Mode == GPIO_MODE_OUTPUT || GPIO_ConfigStruct->Mode == GPIO_MODE_AF){
 8000582:	683b      	ldr	r3, [r7, #0]
 8000584:	685b      	ldr	r3, [r3, #4]
 8000586:	2b01      	cmp	r3, #1
 8000588:	d003      	beq.n	8000592 <GPIO_Init+0x6c>
 800058a:	683b      	ldr	r3, [r7, #0]
 800058c:	685b      	ldr	r3, [r3, #4]
 800058e:	2b02      	cmp	r3, #2
 8000590:	d12d      	bne.n	80005ee <GPIO_Init+0xc8>

			/* Output Type Config */
			uint32_t tempValue = GPIOx->OTYPER;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	685b      	ldr	r3, [r3, #4]
 8000596:	60fb      	str	r3, [r7, #12]
			tempValue &= ~(0x1U <<pos);
 8000598:	2201      	movs	r2, #1
 800059a:	69fb      	ldr	r3, [r7, #28]
 800059c:	fa02 f303 	lsl.w	r3, r2, r3
 80005a0:	43db      	mvns	r3, r3
 80005a2:	68fa      	ldr	r2, [r7, #12]
 80005a4:	4013      	ands	r3, r2
 80005a6:	60fb      	str	r3, [r7, #12]
			tempValue |= (GPIO_ConfigStruct->Otype << pos);
 80005a8:	683b      	ldr	r3, [r7, #0]
 80005aa:	689a      	ldr	r2, [r3, #8]
 80005ac:	69fb      	ldr	r3, [r7, #28]
 80005ae:	fa02 f303 	lsl.w	r3, r2, r3
 80005b2:	68fa      	ldr	r2, [r7, #12]
 80005b4:	4313      	orrs	r3, r2
 80005b6:	60fb      	str	r3, [r7, #12]
			GPIOx->OTYPER = tempValue;
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	68fa      	ldr	r2, [r7, #12]
 80005bc:	605a      	str	r2, [r3, #4]

			/* Output Speed Config */
			tempValue = GPIOx->OSPEEDR;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	689b      	ldr	r3, [r3, #8]
 80005c2:	60fb      	str	r3, [r7, #12]
			tempValue &= ~(0x3U <<(pos*2));
 80005c4:	69fb      	ldr	r3, [r7, #28]
 80005c6:	005b      	lsls	r3, r3, #1
 80005c8:	2203      	movs	r2, #3
 80005ca:	fa02 f303 	lsl.w	r3, r2, r3
 80005ce:	43db      	mvns	r3, r3
 80005d0:	68fa      	ldr	r2, [r7, #12]
 80005d2:	4013      	ands	r3, r2
 80005d4:	60fb      	str	r3, [r7, #12]
			tempValue |= (GPIO_ConfigStruct->Speed << (pos*2));
 80005d6:	683b      	ldr	r3, [r7, #0]
 80005d8:	68da      	ldr	r2, [r3, #12]
 80005da:	69fb      	ldr	r3, [r7, #28]
 80005dc:	005b      	lsls	r3, r3, #1
 80005de:	fa02 f303 	lsl.w	r3, r2, r3
 80005e2:	68fa      	ldr	r2, [r7, #12]
 80005e4:	4313      	orrs	r3, r2
 80005e6:	60fb      	str	r3, [r7, #12]
			GPIOx->OSPEEDR = tempValue;
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	68fa      	ldr	r2, [r7, #12]
 80005ec:	609a      	str	r2, [r3, #8]
		}

		/* Output Push-Pull Config */
		uint32_t tempValue = GPIOx->PUPDR;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	68db      	ldr	r3, [r3, #12]
 80005f2:	60bb      	str	r3, [r7, #8]
		tempValue &= ~(0x3U << (pos*2));
 80005f4:	69fb      	ldr	r3, [r7, #28]
 80005f6:	005b      	lsls	r3, r3, #1
 80005f8:	2203      	movs	r2, #3
 80005fa:	fa02 f303 	lsl.w	r3, r2, r3
 80005fe:	43db      	mvns	r3, r3
 8000600:	68ba      	ldr	r2, [r7, #8]
 8000602:	4013      	ands	r3, r2
 8000604:	60bb      	str	r3, [r7, #8]
		tempValue |= (GPIO_ConfigStruct->PuPd <<(pos*2));
 8000606:	683b      	ldr	r3, [r7, #0]
 8000608:	691a      	ldr	r2, [r3, #16]
 800060a:	69fb      	ldr	r3, [r7, #28]
 800060c:	005b      	lsls	r3, r3, #1
 800060e:	fa02 f303 	lsl.w	r3, r2, r3
 8000612:	68ba      	ldr	r2, [r7, #8]
 8000614:	4313      	orrs	r3, r2
 8000616:	60bb      	str	r3, [r7, #8]
		GPIOx->PUPDR = tempValue;
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	68ba      	ldr	r2, [r7, #8]
 800061c:	60da      	str	r2, [r3, #12]

		if(GPIO_ConfigStruct->Mode == GPIO_MODE_AF){
 800061e:	683b      	ldr	r3, [r7, #0]
 8000620:	685b      	ldr	r3, [r3, #4]
 8000622:	2b02      	cmp	r3, #2
 8000624:	d123      	bne.n	800066e <GPIO_Init+0x148>

			tempValue = GPIOx->AFR[pos >> 3U];
 8000626:	69fb      	ldr	r3, [r7, #28]
 8000628:	08da      	lsrs	r2, r3, #3
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	3208      	adds	r2, #8
 800062e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000632:	60bb      	str	r3, [r7, #8]
			tempValue &= ~(0xFU << ((pos & 0x7U)*4));
 8000634:	69fb      	ldr	r3, [r7, #28]
 8000636:	f003 0307 	and.w	r3, r3, #7
 800063a:	009b      	lsls	r3, r3, #2
 800063c:	220f      	movs	r2, #15
 800063e:	fa02 f303 	lsl.w	r3, r2, r3
 8000642:	43db      	mvns	r3, r3
 8000644:	68ba      	ldr	r2, [r7, #8]
 8000646:	4013      	ands	r3, r2
 8000648:	60bb      	str	r3, [r7, #8]
			tempValue |= (GPIO_ConfigStruct->Alternate <<((pos & 0x7U)*4));
 800064a:	683b      	ldr	r3, [r7, #0]
 800064c:	699a      	ldr	r2, [r3, #24]
 800064e:	69fb      	ldr	r3, [r7, #28]
 8000650:	f003 0307 	and.w	r3, r3, #7
 8000654:	009b      	lsls	r3, r3, #2
 8000656:	fa02 f303 	lsl.w	r3, r2, r3
 800065a:	68ba      	ldr	r2, [r7, #8]
 800065c:	4313      	orrs	r3, r2
 800065e:	60bb      	str	r3, [r7, #8]
			GPIOx->AFR[pos >> 3U] = tempValue;
 8000660:	69fb      	ldr	r3, [r7, #28]
 8000662:	08da      	lsrs	r2, r3, #3
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	3208      	adds	r2, #8
 8000668:	68b9      	ldr	r1, [r7, #8]
 800066a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	for(pos =0; pos< 16; pos++){
 800066e:	69fb      	ldr	r3, [r7, #28]
 8000670:	3301      	adds	r3, #1
 8000672:	61fb      	str	r3, [r7, #28]
 8000674:	69fb      	ldr	r3, [r7, #28]
 8000676:	2b0f      	cmp	r3, #15
 8000678:	f67f af5d 	bls.w	8000536 <GPIO_Init+0x10>
		}

	}

}
 800067c:	bf00      	nop
 800067e:	bf00      	nop
 8000680:	3724      	adds	r7, #36	@ 0x24
 8000682:	46bd      	mov	sp, r7
 8000684:	bc80      	pop	{r7}
 8000686:	4770      	bx	lr

08000688 <GPIO_WritePin>:
 *
 * @retval Void
 *
 */

void GPIO_WritePin(GPIO_TypeDef_t *GPIOx, uint16_t pinNumber, GPIO_PinState_t pinState ){
 8000688:	b480      	push	{r7}
 800068a:	b083      	sub	sp, #12
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	460b      	mov	r3, r1
 8000692:	807b      	strh	r3, [r7, #2]
 8000694:	4613      	mov	r3, r2
 8000696:	707b      	strb	r3, [r7, #1]

	if( pinState == GPIO_Pin_Set){
 8000698:	787b      	ldrb	r3, [r7, #1]
 800069a:	2b01      	cmp	r3, #1
 800069c:	d103      	bne.n	80006a6 <GPIO_WritePin+0x1e>

		GPIOx->BSRR = pinNumber;
 800069e:	887a      	ldrh	r2, [r7, #2]
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	619a      	str	r2, [r3, #24]

		GPIOx->BSRR = (pinNumber << 16U);

	}

}
 80006a4:	e003      	b.n	80006ae <GPIO_WritePin+0x26>
		GPIOx->BSRR = (pinNumber << 16U);
 80006a6:	887b      	ldrh	r3, [r7, #2]
 80006a8:	041a      	lsls	r2, r3, #16
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	619a      	str	r2, [r3, #24]
}
 80006ae:	bf00      	nop
 80006b0:	370c      	adds	r7, #12
 80006b2:	46bd      	mov	sp, r7
 80006b4:	bc80      	pop	{r7}
 80006b6:	4770      	bx	lr

080006b8 <memset>:
 80006b8:	4402      	add	r2, r0
 80006ba:	4603      	mov	r3, r0
 80006bc:	4293      	cmp	r3, r2
 80006be:	d100      	bne.n	80006c2 <memset+0xa>
 80006c0:	4770      	bx	lr
 80006c2:	f803 1b01 	strb.w	r1, [r3], #1
 80006c6:	e7f9      	b.n	80006bc <memset+0x4>

080006c8 <__libc_init_array>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	4d0d      	ldr	r5, [pc, #52]	@ (8000700 <__libc_init_array+0x38>)
 80006cc:	4c0d      	ldr	r4, [pc, #52]	@ (8000704 <__libc_init_array+0x3c>)
 80006ce:	1b64      	subs	r4, r4, r5
 80006d0:	10a4      	asrs	r4, r4, #2
 80006d2:	2600      	movs	r6, #0
 80006d4:	42a6      	cmp	r6, r4
 80006d6:	d109      	bne.n	80006ec <__libc_init_array+0x24>
 80006d8:	4d0b      	ldr	r5, [pc, #44]	@ (8000708 <__libc_init_array+0x40>)
 80006da:	4c0c      	ldr	r4, [pc, #48]	@ (800070c <__libc_init_array+0x44>)
 80006dc:	f000 f818 	bl	8000710 <_init>
 80006e0:	1b64      	subs	r4, r4, r5
 80006e2:	10a4      	asrs	r4, r4, #2
 80006e4:	2600      	movs	r6, #0
 80006e6:	42a6      	cmp	r6, r4
 80006e8:	d105      	bne.n	80006f6 <__libc_init_array+0x2e>
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f855 3b04 	ldr.w	r3, [r5], #4
 80006f0:	4798      	blx	r3
 80006f2:	3601      	adds	r6, #1
 80006f4:	e7ee      	b.n	80006d4 <__libc_init_array+0xc>
 80006f6:	f855 3b04 	ldr.w	r3, [r5], #4
 80006fa:	4798      	blx	r3
 80006fc:	3601      	adds	r6, #1
 80006fe:	e7f2      	b.n	80006e6 <__libc_init_array+0x1e>
 8000700:	08000728 	.word	0x08000728
 8000704:	08000728 	.word	0x08000728
 8000708:	08000728 	.word	0x08000728
 800070c:	0800072c 	.word	0x0800072c

08000710 <_init>:
 8000710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000712:	bf00      	nop
 8000714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000716:	bc08      	pop	{r3}
 8000718:	469e      	mov	lr, r3
 800071a:	4770      	bx	lr

0800071c <_fini>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	bf00      	nop
 8000720:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000722:	bc08      	pop	{r3}
 8000724:	469e      	mov	lr, r3
 8000726:	4770      	bx	lr
